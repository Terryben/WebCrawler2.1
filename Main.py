#Ben Terry
#05/25/2016
#program to learn how to grab text from a website
#Very minor error checking.
#Sime time delays added so it's easier to watch and needed for Actions I think.


import sys
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common import action_chains
import time

def Log_Into_MS_Account(username, password, ChromeDriver):

    MS_url = "https://login.live.com/"

    # get the webpage
    #This try catch block doesn't really do anything. If Chrome can't find the url it's not throwing an exception. Maybe use an assert on some html on the expected page?
    try:
        ChromeDriver.get(MS_url)
    except Exception:
        print(Exception)
        sys.exit(1)
    # Grab the Username id element. I found these IDs by manually looking at the source code on the page. Probably not how we should be doing it.
    UserNameElement = ChromeDriver.find_element_by_id("i0116")

    # Enter text into the elements text field
    UserNameElement.send_keys(username)

    # Grab the button element. I think we can search for "input type = submit" or something like that to find a button without the exact id.
    ButtonElement = ChromeDriver.find_element_by_id("idSIButton9")

    # Press the button
    ButtonElement.send_keys(Keys.ENTER)

    # password box is generated by javascript and not just static HTML. It is not a visible element that we can sent commands. Must use actions that send key presses like a person would.
    action = action_chains.ActionChains(ChromeDriver)
    time.sleep(1)
    action.send_keys(password)
    action.send_keys(Keys.ENTER)
    action.perform()
    time.sleep(1)

def Get_Rand_Wiki_Title(ChromeDriver):
    wiki_random_url = "https://en.wikipedia.org/wiki/Special:Random"
    # random wikipedia article
    ChromeDriver.get(wiki_random_url)
    time.sleep(1)
    return ChromeDriver.title

def Search_In_Bing(search_string, ChromeDriver):
    bing_url = "https://www.bing.com/"
    # Go to bing
    ChromeDriver.get(bing_url)
    time.sleep(1)
    # Grab the search box
    SearchBoxElement = ChromeDriver.find_element_by_id("sb_form_q")

    # Enter some text
    SearchBoxElement.send_keys(search_string)
    time.sleep(1)

    # Hit the search button
    SearchButton = ChromeDriver.find_element_by_id("sb_form_go")
    SearchButton.click()

if __name__ == '__main__':
    print("There are: " + str(len(sys.argv)) + " command line args")
    username = sys.argv[1]
    password = sys.argv[2]
    print ("The username is: " + username + " and the password is: " + password)

    #make a browser driver. Part of the selenium package. I like Chrome
    try:
        ChromeDriver = webdriver.Chrome("F:\Programming\Python\WebCrawler\ChromeDriverForWC\chromedriver.exe")
    except Exception:
        print(Exception)
        print("Cannot start the Chrome Driver. Program will exit.")
        sys.exit(1)

    #Log into MS account
    Log_Into_MS_Account(username, password, ChromeDriver)


    #You only get points for 10 searches a day. Will loop ten times
    for x in range(0, 9):
        #Get random wikipedia article title. Still has Wikipedia at the end of it. Could substring or there might be a different property or method we could use
        rand_wiki_title = Get_Rand_Wiki_Title(ChromeDriver)
        #Search the title
        Search_In_Bing(rand_wiki_title, ChromeDriver)


    #Close the driver
    ChromeDriver.close()

